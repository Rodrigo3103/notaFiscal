# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'formProdutos.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QApplication, QWidget, QFileDialog, QTableWidget, QTableWidgetItem
from PyQt5.QtCore import *

# Imports de telas

# lib conexão MySQL
import mysql.connector

### Import das Variaveis Controle ###
import variaveisDeControles

### Variáveis de conexão com o banco de dados ###
host = variaveisDeControles.host
user = variaveisDeControles.user
password = variaveisDeControles.password
database = variaveisDeControles.database

# Imports libs gerais
from datetime import datetime
import subprocess
import pandas as pd
import funcoesAuxiliares



class Ui_formProdutos(object):
    def setupUi(self, formProdutos):
        formProdutos.setObjectName("formProdutos")
        formProdutos.resize(901, 753)
        self.txt_pesquisarPor = QtWidgets.QLabel(formProdutos)
        self.txt_pesquisarPor.setGeometry(QtCore.QRect(60, 200, 111, 20))
        self.txt_pesquisarPor.setObjectName("txt_pesquisarPor")
        self.bt_sair = QtWidgets.QToolButton(formProdutos)
        self.bt_sair.setGeometry(QtCore.QRect(810, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_sair.setFont(font)
        self.bt_sair.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_sair.setStyleSheet("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/iconSair.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_sair.setIcon(icon)
        self.bt_sair.setIconSize(QtCore.QSize(80, 80))
        self.bt_sair.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_sair.setObjectName("bt_sair")
        self.bt_incluir = QtWidgets.QToolButton(formProdutos)
        self.bt_incluir.setGeometry(QtCore.QRect(0, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_incluir.setFont(font)
        self.bt_incluir.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_incluir.setStyleSheet("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/iconAdicionar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_incluir.setIcon(icon1)
        self.bt_incluir.setIconSize(QtCore.QSize(80, 80))
        self.bt_incluir.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_incluir.setObjectName("bt_incluir")
        self.bt_pesquisar = QtWidgets.QPushButton(formProdutos)
        self.bt_pesquisar.setGeometry(QtCore.QRect(730, 200, 21, 23))
        self.bt_pesquisar.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_pesquisar.setStyleSheet("")
        self.bt_pesquisar.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/iconPesquisar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_pesquisar.setIcon(icon2)
        self.bt_pesquisar.setObjectName("bt_pesquisar")
        self.tb_produtos = QtWidgets.QTableWidget(formProdutos)
        self.tb_produtos.setEnabled(True)
        self.tb_produtos.setGeometry(QtCore.QRect(0, 240, 901, 511))
        self.tb_produtos.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tb_produtos.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tb_produtos.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.tb_produtos.setAutoScroll(True)
        self.tb_produtos.setAlternatingRowColors(True)
        self.tb_produtos.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tb_produtos.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tb_produtos.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tb_produtos.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tb_produtos.setObjectName("tb_produtos")
        self.tb_produtos.setColumnCount(26)
        self.tb_produtos.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setText("ID")
        font = QtGui.QFont()
        font.setPointSize(8)
        item.setFont(font)
        self.tb_produtos.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(19, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(20, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(21, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(22, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(23, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(24, item)
        item = QtWidgets.QTableWidgetItem()
        self.tb_produtos.setHorizontalHeaderItem(25, item)
        self.tb_produtos.verticalHeader().setVisible(False)
        self.lb_pesquisar = QtWidgets.QLineEdit(formProdutos)
        self.lb_pesquisar.setGeometry(QtCore.QRect(380, 200, 341, 20))
        self.lb_pesquisar.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.lb_pesquisar.setObjectName("lb_pesquisar")
        self.bt_pesquisarGeral = QtWidgets.QPushButton(formProdutos)
        self.bt_pesquisarGeral.setGeometry(QtCore.QRect(760, 200, 21, 23))
        self.bt_pesquisarGeral.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_pesquisarGeral.setStyleSheet("")
        self.bt_pesquisarGeral.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/iconFiltro.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_pesquisarGeral.setIcon(icon3)
        self.bt_pesquisarGeral.setObjectName("bt_pesquisarGeral")
        self.bt_alterar = QtWidgets.QToolButton(formProdutos)
        self.bt_alterar.setGeometry(QtCore.QRect(90, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_alterar.setFont(font)
        self.bt_alterar.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_alterar.setStyleSheet("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/iconAlterar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_alterar.setIcon(icon4)
        self.bt_alterar.setIconSize(QtCore.QSize(80, 80))
        self.bt_alterar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_alterar.setObjectName("bt_alterar")
        self.bt_consultar = QtWidgets.QToolButton(formProdutos)
        self.bt_consultar.setGeometry(QtCore.QRect(180, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_consultar.setFont(font)
        self.bt_consultar.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_consultar.setStyleSheet("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/iconConsultar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_consultar.setIcon(icon5)
        self.bt_consultar.setIconSize(QtCore.QSize(80, 80))
        self.bt_consultar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_consultar.setObjectName("bt_consultar")
        self.bt_excluir = QtWidgets.QToolButton(formProdutos)
        self.bt_excluir.setGeometry(QtCore.QRect(270, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_excluir.setFont(font)
        self.bt_excluir.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_excluir.setStyleSheet("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/iconCancelar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_excluir.setIcon(icon6)
        self.bt_excluir.setIconSize(QtCore.QSize(80, 80))
        self.bt_excluir.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_excluir.setObjectName("bt_excluir")
        self.bt_inutilizado1 = QtWidgets.QToolButton(formProdutos)
        self.bt_inutilizado1.setGeometry(QtCore.QRect(360, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_inutilizado1.setFont(font)
        self.bt_inutilizado1.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_inutilizado1.setStyleSheet("")
        self.bt_inutilizado1.setText("")
        self.bt_inutilizado1.setIconSize(QtCore.QSize(80, 80))
        self.bt_inutilizado1.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_inutilizado1.setObjectName("bt_inutilizado1")
        self.bt_inutilizado2 = QtWidgets.QToolButton(formProdutos)
        self.bt_inutilizado2.setGeometry(QtCore.QRect(450, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_inutilizado2.setFont(font)
        self.bt_inutilizado2.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_inutilizado2.setStyleSheet("")
        self.bt_inutilizado2.setText("")
        self.bt_inutilizado2.setIconSize(QtCore.QSize(80, 80))
        self.bt_inutilizado2.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_inutilizado2.setObjectName("bt_inutilizado2")
        self.lb_digiteAqui = QtWidgets.QLabel(formProdutos)
        self.lb_digiteAqui.setGeometry(QtCore.QRect(290, 200, 91, 20))
        self.lb_digiteAqui.setObjectName("lb_digiteAqui")
        self.cb_pesquisarPor = QtWidgets.QComboBox(formProdutos)
        self.cb_pesquisarPor.setGeometry(QtCore.QRect(170, 200, 111, 22))
        self.cb_pesquisarPor.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_pesquisarPor.setObjectName("cb_pesquisarPor")
        self.cb_pesquisarPor.addItem("")
        self.cb_pesquisarPor.addItem("")
        self.txt_familia = QtWidgets.QLabel(formProdutos)
        self.txt_familia.setGeometry(QtCore.QRect(10, 100, 61, 20))
        self.txt_familia.setObjectName("txt_familia")
        self.cb_familia = QtWidgets.QComboBox(formProdutos)
        self.cb_familia.setGeometry(QtCore.QRect(90, 100, 371, 22))
        self.cb_familia.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_familia.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_familia.setFrame(True)
        self.cb_familia.setObjectName("cb_familia")
        self.cb_grupo = QtWidgets.QComboBox(formProdutos)
        self.cb_grupo.setGeometry(QtCore.QRect(520, 100, 341, 22))
        self.cb_grupo.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_grupo.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_grupo.setObjectName("cb_grupo")
        self.txt_grupo = QtWidgets.QLabel(formProdutos)
        self.txt_grupo.setGeometry(QtCore.QRect(460, 100, 61, 20))
        self.txt_grupo.setObjectName("txt_grupo")
        self.cb_subgrupo = QtWidgets.QComboBox(formProdutos)
        self.cb_subgrupo.setGeometry(QtCore.QRect(90, 140, 371, 22))
        self.cb_subgrupo.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_subgrupo.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_subgrupo.setObjectName("cb_subgrupo")
        self.txt_subgrupo = QtWidgets.QLabel(formProdutos)
        self.txt_subgrupo.setGeometry(QtCore.QRect(10, 140, 81, 20))
        self.txt_subgrupo.setObjectName("txt_subgrupo")
        self.gb_ativo = QtWidgets.QGroupBox(formProdutos)
        self.gb_ativo.setGeometry(QtCore.QRect(480, 130, 221, 51))
        self.gb_ativo.setObjectName("gb_ativo")
        self.rb_ativoNao = QtWidgets.QRadioButton(self.gb_ativo)
        self.rb_ativoNao.setGeometry(QtCore.QRect(70, 20, 51, 17))
        self.rb_ativoNao.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.rb_ativoNao.setObjectName("rb_ativoNao")
        self.rb_ativoSim = QtWidgets.QRadioButton(self.gb_ativo)
        self.rb_ativoSim.setGeometry(QtCore.QRect(10, 20, 51, 17))
        self.rb_ativoSim.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.rb_ativoSim.setChecked(True)
        self.rb_ativoSim.setObjectName("rb_ativoSim")
        self.rb_ativoAmbos = QtWidgets.QRadioButton(self.gb_ativo)
        self.rb_ativoAmbos.setGeometry(QtCore.QRect(130, 20, 81, 17))
        self.rb_ativoAmbos.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.rb_ativoAmbos.setObjectName("rb_ativoAmbos")
        self.gb_baixarEstoque = QtWidgets.QGroupBox(formProdutos)
        self.gb_baixarEstoque.setGeometry(QtCore.QRect(719, 130, 131, 51))
        self.gb_baixarEstoque.setObjectName("gb_baixarEstoque")
        self.rb_baixarEstoqueNao = QtWidgets.QRadioButton(self.gb_baixarEstoque)
        self.rb_baixarEstoqueNao.setGeometry(QtCore.QRect(70, 20, 51, 17))
        self.rb_baixarEstoqueNao.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.rb_baixarEstoqueNao.setObjectName("rb_baixarEstoqueNao")
        self.rb_baixarEstoqueSim = QtWidgets.QRadioButton(self.gb_baixarEstoque)
        self.rb_baixarEstoqueSim.setGeometry(QtCore.QRect(10, 20, 51, 17))
        self.rb_baixarEstoqueSim.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.rb_baixarEstoqueSim.setChecked(True)
        self.rb_baixarEstoqueSim.setObjectName("rb_baixarEstoqueSim")
        self.line = QtWidgets.QFrame(formProdutos)
        self.line.setGeometry(QtCore.QRect(10, 220, 881, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.bt_excel = QtWidgets.QToolButton(formProdutos)
        self.bt_excel.setGeometry(QtCore.QRect(630, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_excel.setFont(font)
        self.bt_excel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_excel.setStyleSheet("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/iconExcel.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_excel.setIcon(icon7)
        self.bt_excel.setIconSize(QtCore.QSize(80, 80))
        self.bt_excel.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_excel.setObjectName("bt_excel")
        self.bt_imprimir = QtWidgets.QToolButton(formProdutos)
        self.bt_imprimir.setGeometry(QtCore.QRect(720, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_imprimir.setFont(font)
        self.bt_imprimir.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_imprimir.setStyleSheet("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/iconImprimir.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_imprimir.setIcon(icon8)
        self.bt_imprimir.setIconSize(QtCore.QSize(48, 48))
        self.bt_imprimir.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_imprimir.setObjectName("bt_imprimir")
        self.frameDadosProduto = QtWidgets.QFrame(formProdutos)
        self.frameDadosProduto.setGeometry(QtCore.QRect(30, 250, 841, 481))
        self.frameDadosProduto.setStyleSheet("background-color: rgb(241, 241, 241);")
        self.frameDadosProduto.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameDadosProduto.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameDadosProduto.setObjectName("frameDadosProduto")
        self.tabWidget = QtWidgets.QTabWidget(self.frameDadosProduto)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 821, 461))
        self.tabWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.tabWidget.setObjectName("tabWidget")
        self.tabDadosProduto = QtWidgets.QWidget()
        self.tabDadosProduto.setObjectName("tabDadosProduto")
        self.lb_descricaoCadastro = QtWidgets.QLineEdit(self.tabDadosProduto)
        self.lb_descricaoCadastro.setGeometry(QtCore.QRect(20, 130, 451, 20))
        self.lb_descricaoCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_descricaoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_descricaoCadastro.setObjectName("lb_descricaoCadastro")
        self.txt_descricaoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_descricaoCadastro.setGeometry(QtCore.QRect(20, 110, 81, 16))
        self.txt_descricaoCadastro.setObjectName("txt_descricaoCadastro")
        self.txt_referenciaCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_referenciaCadastro.setGeometry(QtCore.QRect(20, 160, 81, 16))
        self.txt_referenciaCadastro.setObjectName("txt_referenciaCadastro")
        self.lb_referenciaCadastro = QtWidgets.QLineEdit(self.tabDadosProduto)
        self.lb_referenciaCadastro.setGeometry(QtCore.QRect(20, 180, 311, 20))
        self.lb_referenciaCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_referenciaCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_referenciaCadastro.setObjectName("lb_referenciaCadastro")
        self.txt_unidadeCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_unidadeCadastro.setGeometry(QtCore.QRect(490, 110, 61, 16))
        self.txt_unidadeCadastro.setObjectName("txt_unidadeCadastro")
        self.lb_aplicacaoCadastro = QtWidgets.QLineEdit(self.tabDadosProduto)
        self.lb_aplicacaoCadastro.setGeometry(QtCore.QRect(350, 180, 451, 20))
        self.lb_aplicacaoCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_aplicacaoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_aplicacaoCadastro.setObjectName("lb_aplicacaoCadastro")
        self.txt_aplicacaoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_aplicacaoCadastro.setGeometry(QtCore.QRect(350, 160, 81, 16))
        self.txt_aplicacaoCadastro.setObjectName("txt_aplicacaoCadastro")
        self.lb_localizacaoCadastro = QtWidgets.QLineEdit(self.tabDadosProduto)
        self.lb_localizacaoCadastro.setGeometry(QtCore.QRect(20, 230, 251, 20))
        self.lb_localizacaoCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_localizacaoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_localizacaoCadastro.setObjectName("lb_localizacaoCadastro")
        self.txt_localizacaoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_localizacaoCadastro.setGeometry(QtCore.QRect(20, 210, 91, 16))
        self.txt_localizacaoCadastro.setObjectName("txt_localizacaoCadastro")
        self.txt_dataCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_dataCadastro.setGeometry(QtCore.QRect(270, 210, 111, 16))
        self.txt_dataCadastro.setObjectName("txt_dataCadastro")
        self.bt_cancelar = QtWidgets.QToolButton(self.tabDadosProduto)
        self.bt_cancelar.setGeometry(QtCore.QRect(220, 370, 141, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_cancelar.setFont(font)
        self.bt_cancelar.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_cancelar.setStyleSheet("")
        self.bt_cancelar.setIcon(icon6)
        self.bt_cancelar.setIconSize(QtCore.QSize(48, 48))
        self.bt_cancelar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_cancelar.setObjectName("bt_cancelar")
        self.bt_avancar = QtWidgets.QToolButton(self.tabDadosProduto)
        self.bt_avancar.setGeometry(QtCore.QRect(500, 370, 131, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_avancar.setFont(font)
        self.bt_avancar.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_avancar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.bt_avancar.setStyleSheet("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/iconSetaDireita.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_avancar.setIcon(icon9)
        self.bt_avancar.setIconSize(QtCore.QSize(48, 48))
        self.bt_avancar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_avancar.setObjectName("bt_avancar")
        self.txt_grupoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_grupoCadastro.setGeometry(QtCore.QRect(430, 20, 61, 20))
        self.txt_grupoCadastro.setObjectName("txt_grupoCadastro")
        self.cb_familiaCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_familiaCadastro.setGeometry(QtCore.QRect(70, 20, 341, 22))
        self.cb_familiaCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_familiaCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_familiaCadastro.setFrame(True)
        self.cb_familiaCadastro.setObjectName("cb_familiaCadastro")
        self.txt_familiaCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_familiaCadastro.setGeometry(QtCore.QRect(10, 20, 61, 20))
        self.txt_familiaCadastro.setObjectName("txt_familiaCadastro")
        self.cb_subgrupoCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_subgrupoCadastro.setGeometry(QtCore.QRect(70, 60, 341, 22))
        self.cb_subgrupoCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_subgrupoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_subgrupoCadastro.setObjectName("cb_subgrupoCadastro")
        self.txt_subgrupoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_subgrupoCadastro.setGeometry(QtCore.QRect(0, 60, 71, 20))
        self.txt_subgrupoCadastro.setObjectName("txt_subgrupoCadastro")
        self.cb_grupoCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_grupoCadastro.setGeometry(QtCore.QRect(490, 20, 311, 22))
        self.cb_grupoCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_grupoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_grupoCadastro.setObjectName("cb_grupoCadastro")
        self.cb_unidadeCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_unidadeCadastro.setGeometry(QtCore.QRect(490, 130, 111, 22))
        self.cb_unidadeCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_unidadeCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_unidadeCadastro.setObjectName("cb_unidadeCadastro")
        self.lb_codigoBarrasCadastro = QtWidgets.QLineEdit(self.tabDadosProduto)
        self.lb_codigoBarrasCadastro.setGeometry(QtCore.QRect(620, 130, 181, 20))
        self.lb_codigoBarrasCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_codigoBarrasCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_codigoBarrasCadastro.setObjectName("lb_codigoBarrasCadastro")
        self.txt_codigoBarrasCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_codigoBarrasCadastro.setGeometry(QtCore.QRect(620, 110, 141, 16))
        self.txt_codigoBarrasCadastro.setObjectName("txt_codigoBarrasCadastro")
        self.dataCadastro = QtWidgets.QDateEdit(self.tabDadosProduto)
        self.dataCadastro.setGeometry(QtCore.QRect(280, 230, 101, 22))
        self.dataCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.dataCadastro.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.dataCadastro.setKeyboardTracking(True)
        self.dataCadastro.setObjectName("dataCadastro")
        self.txt_ativoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_ativoCadastro.setGeometry(QtCore.QRect(390, 210, 61, 16))
        self.txt_ativoCadastro.setObjectName("txt_ativoCadastro")
        self.cb_ativoCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_ativoCadastro.setGeometry(QtCore.QRect(390, 230, 81, 22))
        self.cb_ativoCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_ativoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_ativoCadastro.setObjectName("cb_ativoCadastro")
        self.cb_ativoCadastro.addItem("")
        self.cb_ativoCadastro.addItem("")
        self.cb_baixarEstoqueCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_baixarEstoqueCadastro.setGeometry(QtCore.QRect(500, 230, 81, 22))
        self.cb_baixarEstoqueCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_baixarEstoqueCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_baixarEstoqueCadastro.setObjectName("cb_baixarEstoqueCadastro")
        self.cb_baixarEstoqueCadastro.addItem("")
        self.cb_baixarEstoqueCadastro.addItem("")
        self.txt_baixarEstoqueCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_baixarEstoqueCadastro.setGeometry(QtCore.QRect(490, 210, 121, 16))
        self.txt_baixarEstoqueCadastro.setObjectName("txt_baixarEstoqueCadastro")
        self.txt_tipoMaterialCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_tipoMaterialCadastro.setGeometry(QtCore.QRect(600, 210, 101, 16))
        self.txt_tipoMaterialCadastro.setObjectName("txt_tipoMaterialCadastro")
        self.cb_tipoMaterialCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_tipoMaterialCadastro.setGeometry(QtCore.QRect(610, 230, 81, 22))
        self.cb_tipoMaterialCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_tipoMaterialCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_tipoMaterialCadastro.setObjectName("cb_tipoMaterialCadastro")
        self.cb_tipoMaterialCadastro.addItem("")
        self.cb_tipoMaterialCadastro.addItem("")
        self.cb_tipoMaterialCadastro.addItem("")
        self.cb_tipoMaterialCadastro.addItem("")
        self.cb_tipoMaterialCadastro.addItem("")
        self.lb_complementoCadastro = QtWidgets.QTextEdit(self.tabDadosProduto)
        self.lb_complementoCadastro.setGeometry(QtCore.QRect(20, 280, 781, 81))
        self.lb_complementoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_complementoCadastro.setObjectName("lb_complementoCadastro")
        self.txt_complementoCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_complementoCadastro.setGeometry(QtCore.QRect(20, 260, 111, 16))
        self.txt_complementoCadastro.setObjectName("txt_complementoCadastro")
        self.cb_tipoEmpresaCadastro = QtWidgets.QComboBox(self.tabDadosProduto)
        self.cb_tipoEmpresaCadastro.setGeometry(QtCore.QRect(720, 230, 81, 22))
        self.cb_tipoEmpresaCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_tipoEmpresaCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_tipoEmpresaCadastro.setObjectName("cb_tipoEmpresaCadastro")
        self.cb_tipoEmpresaCadastro.addItem("")
        self.cb_tipoEmpresaCadastro.addItem("")
        self.cb_tipoEmpresaCadastro.addItem("")
        self.cb_tipoEmpresaCadastro.addItem("")
        self.cb_tipoEmpresaCadastro.addItem("")
        self.txt_tipoEmpresaCadastro = QtWidgets.QLabel(self.tabDadosProduto)
        self.txt_tipoEmpresaCadastro.setGeometry(QtCore.QRect(710, 210, 101, 16))
        self.txt_tipoEmpresaCadastro.setObjectName("txt_tipoEmpresaCadastro")
        self.tabWidget.addTab(self.tabDadosProduto, "")
        self.tab_contabilidade = QtWidgets.QWidget()
        self.tab_contabilidade.setObjectName("tab_contabilidade")
        self.bt_confirmar = QtWidgets.QToolButton(self.tab_contabilidade)
        self.bt_confirmar.setGeometry(QtCore.QRect(510, 370, 131, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_confirmar.setFont(font)
        self.bt_confirmar.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_confirmar.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.bt_confirmar.setStyleSheet("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons/iconConfirmar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_confirmar.setIcon(icon10)
        self.bt_confirmar.setIconSize(QtCore.QSize(40, 48))
        self.bt_confirmar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_confirmar.setObjectName("bt_confirmar")
        self.bt_retornar = QtWidgets.QToolButton(self.tab_contabilidade)
        self.bt_retornar.setGeometry(QtCore.QRect(220, 370, 141, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_retornar.setFont(font)
        self.bt_retornar.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_retornar.setStyleSheet("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons/iconSetaEsquerda.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_retornar.setIcon(icon11)
        self.bt_retornar.setIconSize(QtCore.QSize(48, 48))
        self.bt_retornar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_retornar.setObjectName("bt_retornar")
        self.lb_precoVendaCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_precoVendaCadastro.setGeometry(QtCore.QRect(10, 30, 81, 20))
        self.lb_precoVendaCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_precoVendaCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_precoVendaCadastro.setObjectName("lb_precoVendaCadastro")
        self.txt_precoVendaCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_precoVendaCadastro.setGeometry(QtCore.QRect(10, 10, 81, 16))
        self.txt_precoVendaCadastro.setObjectName("txt_precoVendaCadastro")
        self.txt_classificacaoFiscalCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_classificacaoFiscalCadastro.setGeometry(QtCore.QRect(470, 10, 91, 20))
        self.txt_classificacaoFiscalCadastro.setObjectName("txt_classificacaoFiscalCadastro")
        self.cb_situacaoTributariaCadastro = QtWidgets.QComboBox(self.tab_contabilidade)
        self.cb_situacaoTributariaCadastro.setGeometry(QtCore.QRect(110, 30, 341, 22))
        self.cb_situacaoTributariaCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_situacaoTributariaCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_situacaoTributariaCadastro.setFrame(True)
        self.cb_situacaoTributariaCadastro.setObjectName("cb_situacaoTributariaCadastro")
        self.txt_situacaoTributariaCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_situacaoTributariaCadastro.setGeometry(QtCore.QRect(110, 10, 111, 20))
        self.txt_situacaoTributariaCadastro.setObjectName("txt_situacaoTributariaCadastro")
        self.cb_classificacaoFiscalCadastro = QtWidgets.QComboBox(self.tab_contabilidade)
        self.cb_classificacaoFiscalCadastro.setGeometry(QtCore.QRect(470, 30, 331, 22))
        self.cb_classificacaoFiscalCadastro.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.cb_classificacaoFiscalCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_classificacaoFiscalCadastro.setObjectName("cb_classificacaoFiscalCadastro")
        self.txt_ipiCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_ipiCadastro.setGeometry(QtCore.QRect(10, 60, 41, 16))
        self.txt_ipiCadastro.setObjectName("txt_ipiCadastro")
        self.lb_ipiCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_ipiCadastro.setGeometry(QtCore.QRect(10, 80, 81, 20))
        self.lb_ipiCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_ipiCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_ipiCadastro.setObjectName("lb_ipiCadastro")
        self.txt_cnpjCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_cnpjCadastro.setGeometry(QtCore.QRect(110, 60, 61, 16))
        self.txt_cnpjCadastro.setObjectName("txt_cnpjCadastro")
        self.lb_icmsCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_icmsCadastro.setGeometry(QtCore.QRect(110, 80, 81, 20))
        self.lb_icmsCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_icmsCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_icmsCadastro.setObjectName("lb_icmsCadastro")
        self.txt_reducaoIcmsCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_reducaoIcmsCadastro.setGeometry(QtCore.QRect(190, 60, 111, 16))
        self.txt_reducaoIcmsCadastro.setObjectName("txt_reducaoIcmsCadastro")
        self.lb_reducaoIcmsCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_reducaoIcmsCadastro.setGeometry(QtCore.QRect(210, 80, 81, 20))
        self.lb_reducaoIcmsCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_reducaoIcmsCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_reducaoIcmsCadastro.setObjectName("lb_reducaoIcmsCadastro")
        self.txt_porcentagemContribuicaoCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_porcentagemContribuicaoCadastro.setGeometry(QtCore.QRect(320, 60, 81, 16))
        self.txt_porcentagemContribuicaoCadastro.setObjectName("txt_porcentagemContribuicaoCadastro")
        self.lb_porcentagemContribuicaoCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_porcentagemContribuicaoCadastro.setGeometry(QtCore.QRect(320, 80, 81, 20))
        self.lb_porcentagemContribuicaoCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_porcentagemContribuicaoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_porcentagemContribuicaoCadastro.setObjectName("lb_porcentagemContribuicaoCadastro")
        self.txt_PorcentagemTotalContribuicaoCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_PorcentagemTotalContribuicaoCadastro.setGeometry(QtCore.QRect(420, 60, 121, 16))
        self.txt_PorcentagemTotalContribuicaoCadastro.setObjectName("txt_PorcentagemTotalContribuicaoCadastro")
        self.lb_porcentagemTotalContribuicaoCadastro = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_porcentagemTotalContribuicaoCadastro.setGeometry(QtCore.QRect(440, 80, 81, 20))
        self.lb_porcentagemTotalContribuicaoCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_porcentagemTotalContribuicaoCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_porcentagemTotalContribuicaoCadastro.setObjectName("lb_porcentagemTotalContribuicaoCadastro")
        self.lb_decretoNfe1 = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_decretoNfe1.setGeometry(QtCore.QRect(10, 130, 541, 20))
        self.lb_decretoNfe1.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_decretoNfe1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_decretoNfe1.setObjectName("lb_decretoNfe1")
        self.txt_decretoNfeCadastro = QtWidgets.QLabel(self.tab_contabilidade)
        self.txt_decretoNfeCadastro.setGeometry(QtCore.QRect(10, 110, 111, 16))
        self.txt_decretoNfeCadastro.setObjectName("txt_decretoNfeCadastro")
        self.lb_decretoNfe2 = QtWidgets.QLineEdit(self.tab_contabilidade)
        self.lb_decretoNfe2.setGeometry(QtCore.QRect(10, 160, 541, 20))
        self.lb_decretoNfe2.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_decretoNfe2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_decretoNfe2.setObjectName("lb_decretoNfe2")
        self.gb_dadosUltimaCompraCadastro = QtWidgets.QGroupBox(self.tab_contabilidade)
        self.gb_dadosUltimaCompraCadastro.setGeometry(QtCore.QRect(10, 190, 791, 171))
        self.gb_dadosUltimaCompraCadastro.setStyleSheet("background-color: rgb(225, 225, 225);")
        self.gb_dadosUltimaCompraCadastro.setObjectName("gb_dadosUltimaCompraCadastro")
        self.txt_ultimaCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_ultimaCompraCadastro.setGeometry(QtCore.QRect(20, 20, 111, 16))
        self.txt_ultimaCompraCadastro.setObjectName("txt_ultimaCompraCadastro")
        self.dataUltimaCompra = QtWidgets.QDateEdit(self.gb_dadosUltimaCompraCadastro)
        self.dataUltimaCompra.setEnabled(False)
        self.dataUltimaCompra.setGeometry(QtCore.QRect(20, 40, 111, 22))
        self.dataUltimaCompra.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.dataUltimaCompra.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.dataUltimaCompra.setKeyboardTracking(True)
        self.dataUltimaCompra.setObjectName("dataUltimaCompra")
        self.txt_qntCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_qntCompraCadastro.setGeometry(QtCore.QRect(160, 20, 71, 16))
        self.txt_qntCompraCadastro.setObjectName("txt_qntCompraCadastro")
        self.lb_qntCompraCadastro = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_qntCompraCadastro.setEnabled(False)
        self.lb_qntCompraCadastro.setGeometry(QtCore.QRect(150, 40, 81, 20))
        self.lb_qntCompraCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_qntCompraCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_qntCompraCadastro.setObjectName("lb_qntCompraCadastro")
        self.lb_codFornecedorCompraCadastro = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_codFornecedorCompraCadastro.setEnabled(False)
        self.lb_codFornecedorCompraCadastro.setGeometry(QtCore.QRect(330, 40, 41, 20))
        self.lb_codFornecedorCompraCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_codFornecedorCompraCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_codFornecedorCompraCadastro.setObjectName("lb_codFornecedorCompraCadastro")
        self.txt_fornecedorCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_fornecedorCompraCadastro.setGeometry(QtCore.QRect(330, 20, 81, 16))
        self.txt_fornecedorCompraCadastro.setObjectName("txt_fornecedorCompraCadastro")
        self.lb_razaoSocialFornecedorCompraCadastro = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_razaoSocialFornecedorCompraCadastro.setEnabled(False)
        self.lb_razaoSocialFornecedorCompraCadastro.setGeometry(QtCore.QRect(380, 40, 281, 20))
        self.lb_razaoSocialFornecedorCompraCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_razaoSocialFornecedorCompraCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_razaoSocialFornecedorCompraCadastro.setObjectName("lb_razaoSocialFornecedorCompraCadastro")
        self.lb_precoCompraCadastro = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_precoCompraCadastro.setEnabled(False)
        self.lb_precoCompraCadastro.setGeometry(QtCore.QRect(240, 40, 81, 20))
        self.lb_precoCompraCadastro.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_precoCompraCadastro.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_precoCompraCadastro.setObjectName("lb_precoCompraCadastro")
        self.txt_precoCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_precoCompraCadastro.setGeometry(QtCore.QRect(240, 20, 91, 16))
        self.txt_precoCompraCadastro.setObjectName("txt_precoCompraCadastro")
        self.lb_precoCusto = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_precoCusto.setGeometry(QtCore.QRect(20, 90, 81, 20))
        self.lb_precoCusto.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_precoCusto.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_precoCusto.setObjectName("lb_precoCusto")
        self.txt_custoCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_custoCompraCadastro.setGeometry(QtCore.QRect(20, 70, 71, 16))
        self.txt_custoCompraCadastro.setObjectName("txt_custoCompraCadastro")
        self.lb_precoCustoMedio = QtWidgets.QLineEdit(self.gb_dadosUltimaCompraCadastro)
        self.lb_precoCustoMedio.setGeometry(QtCore.QRect(130, 90, 81, 20))
        self.lb_precoCustoMedio.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.lb_precoCustoMedio.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lb_precoCustoMedio.setObjectName("lb_precoCustoMedio")
        self.txt_custoMedioCompraCadastro = QtWidgets.QLabel(self.gb_dadosUltimaCompraCadastro)
        self.txt_custoMedioCompraCadastro.setGeometry(QtCore.QRect(120, 70, 101, 16))
        self.txt_custoMedioCompraCadastro.setObjectName("txt_custoMedioCompraCadastro")
        self.bt_atualizarCompraCadastro = QtWidgets.QToolButton(self.gb_dadosUltimaCompraCadastro)
        self.bt_atualizarCompraCadastro.setGeometry(QtCore.QRect(220, 80, 141, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_atualizarCompraCadastro.setFont(font)
        self.bt_atualizarCompraCadastro.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_atualizarCompraCadastro.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.bt_atualizarCompraCadastro.setStyleSheet("")
        self.bt_atualizarCompraCadastro.setIcon(icon10)
        self.bt_atualizarCompraCadastro.setIconSize(QtCore.QSize(40, 48))
        self.bt_atualizarCompraCadastro.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_atualizarCompraCadastro.setObjectName("bt_atualizarCompraCadastro")
        self.bt_confirmarAlteracao = QtWidgets.QToolButton(self.tab_contabilidade)
        self.bt_confirmarAlteracao.setGeometry(QtCore.QRect(510, 370, 131, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_confirmarAlteracao.setFont(font)
        self.bt_confirmarAlteracao.setFocusPolicy(QtCore.Qt.NoFocus)
        self.bt_confirmarAlteracao.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.bt_confirmarAlteracao.setStyleSheet("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icons/iconCancelarNFe.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.bt_confirmarAlteracao.setIcon(icon12)
        self.bt_confirmarAlteracao.setIconSize(QtCore.QSize(40, 48))
        self.bt_confirmarAlteracao.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.bt_confirmarAlteracao.setObjectName("bt_confirmarAlteracao")
        self.tabWidget.addTab(self.tab_contabilidade, "")
        self.bt_inutilizado3 = QtWidgets.QToolButton(formProdutos)
        self.bt_inutilizado3.setGeometry(QtCore.QRect(540, 0, 91, 81))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.bt_inutilizado3.setFont(font)
        self.bt_inutilizado3.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.bt_inutilizado3.setStyleSheet("")
        self.bt_inutilizado3.setText("")
        self.bt_inutilizado3.setIconSize(QtCore.QSize(80, 80))
        self.bt_inutilizado3.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.bt_inutilizado3.setObjectName("bt_inutilizado3")

        self.retranslateUi(formProdutos)
        self.tabWidget.setCurrentIndex(0)
        self.bt_confirmar.clicked.connect(self.lb_descricaoCadastro.clear)
        self.bt_consultar.clicked.connect(self.frameDadosProduto.show)
        self.bt_confirmarAlteracao.clicked.connect(self.frameDadosProduto.hide)
        self.bt_alterar.clicked.connect(self.frameDadosProduto.show)
        self.bt_alterar.clicked.connect(self.bt_confirmarAlteracao.show)
        self.bt_confirmarAlteracao.clicked.connect(self.bt_confirmarAlteracao.hide)
        self.bt_confirmar.clicked.connect(self.frameDadosProduto.hide)
        self.bt_confirmar.clicked.connect(self.bt_confirmar.hide)
        self.bt_incluir.clicked.connect(self.bt_confirmar.show)
        self.bt_incluir.clicked.connect(self.frameDadosProduto.show)
        self.bt_sair.clicked.connect(formProdutos.close)
        self.bt_cancelar.clicked.connect(self.frameDadosProduto.hide)
        self.bt_cancelar.clicked.connect(self.bt_confirmar.hide)
        self.bt_cancelar.clicked.connect(self.bt_confirmarAlteracao.hide)
        QtCore.QMetaObject.connectSlotsByName(formProdutos)

    def retranslateUi(self, formProdutos):
        _translate = QtCore.QCoreApplication.translate
        formProdutos.setWindowTitle(_translate("formProdutos", "Produtos"))
        self.txt_pesquisarPor.setText(_translate("formProdutos", "Pesquisar por:"))
        self.bt_sair.setText(_translate("formProdutos", "Sair"))
        self.bt_incluir.setText(_translate("formProdutos", "Incluir"))
        item = self.tb_produtos.horizontalHeaderItem(1)
        item.setText(_translate("formProdutos", "Familia"))
        item = self.tb_produtos.horizontalHeaderItem(2)
        item.setText(_translate("formProdutos", "Grupo"))
        item = self.tb_produtos.horizontalHeaderItem(3)
        item.setText(_translate("formProdutos", "SubGrupo"))
        item = self.tb_produtos.horizontalHeaderItem(4)
        item.setText(_translate("formProdutos", "Descrição"))
        item = self.tb_produtos.horizontalHeaderItem(5)
        item.setText(_translate("formProdutos", "Unidade"))
        item = self.tb_produtos.horizontalHeaderItem(6)
        item.setText(_translate("formProdutos", "Cod Barras"))
        item = self.tb_produtos.horizontalHeaderItem(7)
        item.setText(_translate("formProdutos", "Referência"))
        item = self.tb_produtos.horizontalHeaderItem(8)
        item.setText(_translate("formProdutos", "Aplicação"))
        item = self.tb_produtos.horizontalHeaderItem(9)
        item.setText(_translate("formProdutos", "Localização"))
        item = self.tb_produtos.horizontalHeaderItem(10)
        item.setText(_translate("formProdutos", "Baixar Estoque"))
        item = self.tb_produtos.horizontalHeaderItem(11)
        item.setText(_translate("formProdutos", "Complemento"))
        item = self.tb_produtos.horizontalHeaderItem(12)
        item.setText(_translate("formProdutos", "Preço Venda"))
        item = self.tb_produtos.horizontalHeaderItem(13)
        item.setText(_translate("formProdutos", "Preço Custo"))
        item = self.tb_produtos.horizontalHeaderItem(14)
        item.setText(_translate("formProdutos", "CST"))
        item = self.tb_produtos.horizontalHeaderItem(15)
        item.setText(_translate("formProdutos", "NCM"))
        item = self.tb_produtos.horizontalHeaderItem(16)
        item.setText(_translate("formProdutos", "IPI"))
        item = self.tb_produtos.horizontalHeaderItem(17)
        item.setText(_translate("formProdutos", "ICMS"))
        item = self.tb_produtos.horizontalHeaderItem(18)
        item.setText(_translate("formProdutos", "Redução ICMS"))
        item = self.tb_produtos.horizontalHeaderItem(19)
        item.setText(_translate("formProdutos", "% Contrib"))
        item = self.tb_produtos.horizontalHeaderItem(20)
        item.setText(_translate("formProdutos", "% Total Contrib"))
        item = self.tb_produtos.horizontalHeaderItem(21)
        item.setText(_translate("formProdutos", "Decreto NFE1"))
        item = self.tb_produtos.horizontalHeaderItem(22)
        item.setText(_translate("formProdutos", "Decreto NFE2"))
        item = self.tb_produtos.horizontalHeaderItem(23)
        item.setText(_translate("formProdutos", "Usuário Cadastro"))
        item = self.tb_produtos.horizontalHeaderItem(24)
        item.setText(_translate("formProdutos", "Auditoria"))
        item = self.tb_produtos.horizontalHeaderItem(25)
        item.setText(_translate("formProdutos", "Ativo"))
        self.bt_alterar.setText(_translate("formProdutos", "Alterar"))
        self.bt_consultar.setText(_translate("formProdutos", "Consultar"))
        self.bt_excluir.setText(_translate("formProdutos", "Excluir"))
        self.lb_digiteAqui.setText(_translate("formProdutos", "Digite Aqui:"))
        self.cb_pesquisarPor.setItemText(0, _translate("formProdutos", "Descrição"))
        self.cb_pesquisarPor.setItemText(1, _translate("formProdutos", "Código"))
        self.txt_familia.setText(_translate("formProdutos", "Família:"))
        self.txt_grupo.setText(_translate("formProdutos", "Grupo:"))
        self.txt_subgrupo.setText(_translate("formProdutos", "Subgrupo:"))
        self.gb_ativo.setTitle(_translate("formProdutos", "Ativo?"))
        self.rb_ativoNao.setText(_translate("formProdutos", "Não"))
        self.rb_ativoSim.setText(_translate("formProdutos", "Sim"))
        self.rb_ativoAmbos.setText(_translate("formProdutos", "Ambos"))
        self.gb_baixarEstoque.setTitle(_translate("formProdutos", "Baixar Estoque?"))
        self.rb_baixarEstoqueNao.setText(_translate("formProdutos", "Não"))
        self.rb_baixarEstoqueSim.setText(_translate("formProdutos", "Sim"))
        self.bt_excel.setText(_translate("formProdutos", "Excel"))
        self.bt_imprimir.setText(_translate("formProdutos", "Imprimir"))
        self.txt_descricaoCadastro.setText(_translate("formProdutos", "Descrição:"))
        self.txt_referenciaCadastro.setText(_translate("formProdutos", "Referência:"))
        self.txt_unidadeCadastro.setText(_translate("formProdutos", "Unidade:"))
        self.txt_aplicacaoCadastro.setText(_translate("formProdutos", "Aplicação:"))
        self.txt_localizacaoCadastro.setText(_translate("formProdutos", "Localização:"))
        self.txt_dataCadastro.setText(_translate("formProdutos", "Data Cadastro:"))
        self.bt_cancelar.setText(_translate("formProdutos", "Cancelar"))
        self.bt_avancar.setText(_translate("formProdutos", "Avançar"))
        self.txt_grupoCadastro.setText(_translate("formProdutos", "Grupo:"))
        self.txt_familiaCadastro.setText(_translate("formProdutos", "Família:"))
        self.txt_subgrupoCadastro.setText(_translate("formProdutos", "Subgrupo:"))
        self.txt_codigoBarrasCadastro.setText(_translate("formProdutos", "Código de barras:"))
        self.txt_ativoCadastro.setText(_translate("formProdutos", "Ativo:"))
        self.cb_ativoCadastro.setItemText(0, _translate("formProdutos", "Sim"))
        self.cb_ativoCadastro.setItemText(1, _translate("formProdutos", "Não"))
        self.cb_baixarEstoqueCadastro.setItemText(0, _translate("formProdutos", "Sim"))
        self.cb_baixarEstoqueCadastro.setItemText(1, _translate("formProdutos", "Não"))
        self.txt_baixarEstoqueCadastro.setText(_translate("formProdutos", "Baixar Estoque?"))
        self.txt_tipoMaterialCadastro.setText(_translate("formProdutos", "Tipo Material:"))
        self.cb_tipoMaterialCadastro.setItemText(0, _translate("formProdutos", "Venda"))
        self.cb_tipoMaterialCadastro.setItemText(1, _translate("formProdutos", "Almoxarifado"))
        self.cb_tipoMaterialCadastro.setItemText(2, _translate("formProdutos", "Combustível"))
        self.cb_tipoMaterialCadastro.setItemText(3, _translate("formProdutos", "Matéria-prima"))
        self.cb_tipoMaterialCadastro.setItemText(4, _translate("formProdutos", "Serviço"))
        self.txt_complementoCadastro.setText(_translate("formProdutos", "Complemento:"))
        self.cb_tipoEmpresaCadastro.setItemText(0, _translate("formProdutos", "Rural"))
        self.cb_tipoEmpresaCadastro.setItemText(1, _translate("formProdutos", "Transporte"))
        self.cb_tipoEmpresaCadastro.setItemText(2, _translate("formProdutos", "Industrial"))
        self.cb_tipoEmpresaCadastro.setItemText(3, _translate("formProdutos", "Extração"))
        self.cb_tipoEmpresaCadastro.setItemText(4, _translate("formProdutos", "Comercial"))
        self.txt_tipoEmpresaCadastro.setText(_translate("formProdutos", "Tipo Empresa:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabDadosProduto), _translate("formProdutos", "Dados do Produto"))
        self.bt_confirmar.setText(_translate("formProdutos", "Confirmar"))
        self.bt_retornar.setText(_translate("formProdutos", "Retornar"))
        self.txt_precoVendaCadastro.setText(_translate("formProdutos", "P. Venda:"))
        self.txt_classificacaoFiscalCadastro.setText(_translate("formProdutos", "Cl. fiscal"))
        self.txt_situacaoTributariaCadastro.setText(_translate("formProdutos", "Sit. Tributária:"))
        self.txt_ipiCadastro.setText(_translate("formProdutos", "IPI:"))
        self.txt_cnpjCadastro.setText(_translate("formProdutos", "ICMS:"))
        self.txt_reducaoIcmsCadastro.setText(_translate("formProdutos", "Redução ICMS:"))
        self.txt_porcentagemContribuicaoCadastro.setText(_translate("formProdutos", "% Contrib."))
        self.txt_PorcentagemTotalContribuicaoCadastro.setText(_translate("formProdutos", "% Total Contrib."))
        self.txt_decretoNfeCadastro.setText(_translate("formProdutos", "Decreto Nfe"))
        self.gb_dadosUltimaCompraCadastro.setTitle(_translate("formProdutos", "Dados da última compra:"))
        self.txt_ultimaCompraCadastro.setText(_translate("formProdutos", "Última compra:"))
        self.txt_qntCompraCadastro.setText(_translate("formProdutos", "Qnt:"))
        self.txt_fornecedorCompraCadastro.setText(_translate("formProdutos", "Fornecedor:"))
        self.txt_precoCompraCadastro.setText(_translate("formProdutos", "P. Compra:"))
        self.txt_custoCompraCadastro.setText(_translate("formProdutos", "Custo:"))
        self.txt_custoMedioCompraCadastro.setText(_translate("formProdutos", "Custo Médio:"))
        self.bt_atualizarCompraCadastro.setText(_translate("formProdutos", "Atualizar"))
        self.bt_confirmarAlteracao.setText(_translate("formProdutos", "Alterar"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_contabilidade), _translate("formProdutos", "Contabilidade"))
        
        
        # Pega o dia, mês e ano atual
        dia = datetime.now().day
        mes = datetime.now().month
        ano = datetime.now().year
        # convert str to QDate
        qdate = QDate(ano, mes, dia)
        # Seta data nos campos de data
        self.dataCadastro.setDate(qdate)
        
        
        # Consulta as tabelas nos BD
        try:
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            ### comboBox familiaCadastro
            consultaSQL = "SELECT idfamilia, descricao FROM familiaproduto WHERE ativo = 'S'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_familia = pd.DataFrame(myresult, columns =  ['idfamilia', 'descricao'])
            df_familia['comboBox'] = df_familia['idfamilia'].astype(str) +" "+ df_familia['descricao'] # método 2
            ### comboBox grupoFamiliaCadastro
            consultaSQL = """
                            SELECT
                                idgrupo, descricao
                            FROM
                                grupofamiliaproduto
                            WHERE
                                fk_familiaProduto = 1 AND 
                                ativo = 'S';
                            """
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_grupo = pd.DataFrame(myresult, columns =  ['idgrupo', 'descricao'])
            df_grupo['comboBox'] = df_grupo['idgrupo'].astype(str) +" "+ df_grupo['descricao'] # método 2
            ### comboBox subGrupoFamiliaCadastro
            consultaSQL = """
                            SELECT
                                idsubGrupo, descricao
                            FROM
                                subgrupofamiliaproduto
                            WHERE
                                fk_grupoProduto = 1 AND 
                                ativo = 'S';
                            """
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            print(consultaSQL)
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_subGrupo = pd.DataFrame(myresult, columns =  ['idsubGrupo', 'descricao'])
            df_subGrupo['comboBox'] = df_subGrupo['idsubGrupo'].astype(str) +" "+ df_subGrupo['descricao'] # método 2
            ### comboBox situacaoTributaria
            consultaSQL = "SELECT situacaoTributaria FROM situacaotributaria WHERE ativo = 'S'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            print(consultaSQL)
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_situacaoTributaria = pd.DataFrame(myresult, columns =  ['situacaoTributaria'])
            df_situacaoTributaria['comboBox'] = df_situacaoTributaria['situacaoTributaria'].astype(str) # método 2
            ### comboBox classificacaoFiscal
            consultaSQL = "SELECT codigo FROM classificacaofiscal WHERE ativo = 'S'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            print(consultaSQL)
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_classificacaoFiscal = pd.DataFrame(myresult, columns =  ['codigo'])
            df_classificacaoFiscal['comboBox'] = df_classificacaoFiscal['codigo'].astype(str) # método 2
             ### comboBox unidadeEstoque
            consultaSQL = "SELECT unidade FROM unidadeestoque WHERE ativo = 'S'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            print(consultaSQL)
            #Cria uma nova coluna no dataframe e o insere no comboBox que só recebe listas.
            df_unidade = pd.DataFrame(myresult, columns =  ['unidade'])
            df_unidade['comboBox'] = df_unidade['unidade'].astype(str) # método 2
            ### Carrega os dados nos comboBox
            self.cb_familiaCadastro.addItems(df_familia['comboBox'])
            self.cb_familia.addItems(df_familia['comboBox'])
            self.cb_grupoCadastro.addItems(df_grupo['comboBox'])
            self.cb_grupo.addItems(df_grupo['comboBox'])
            self.cb_subgrupoCadastro.addItems(df_subGrupo['comboBox'])
            self.cb_subgrupo.addItems(df_subGrupo['comboBox'])
            self.cb_situacaoTributariaCadastro.addItems(df_situacaoTributaria['comboBox'])
            self.cb_classificacaoFiscalCadastro.addItems(df_classificacaoFiscal['comboBox'])
            self.cb_unidadeCadastro.addItems(df_unidade['comboBox'])
        except Exception as error:
            self.all_data = 0
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Error")
            msg.setInformativeText('Ocorreu um erro: ' + str(error))
            msg.setWindowTitle("Error")
            msg.exec_()
            pass
        
        
        # Esconde funções da tela
        self.frameDadosProduto.hide()
        self.bt_confirmar.hide()
        self.bt_confirmarAlteracao.hide()
        
        # Conexões dos botões
        self.bt_retornar.clicked.connect(self.retornaPagTab) # Retorna página do tab
        self.bt_avancar.clicked.connect(self.AvancaPagTab) # Avança página do tab
        #self.bt_pesquisar.clicked.connect(self.pesquisar) # Consulta geral tabela produtos
        self.bt_pesquisarGeral.clicked.connect(self.consultaGeral) # Consulta geral tabela produtos
        self.bt_confirmar.clicked.connect(self.cadastrar) # Cadastra dados no Banco de Dados
        
        
    ### FUNÇÕES SISTEMA
    def cadastrar(self):
    # Seta labels da tela em variáveis
        fk_familia = self.cb_familiaCadastro.currentText().split()[0]
        fk_grupo = self.cb_grupoCadastro.currentText().split()[0]
        fk_subGrupo = self.cb_subgrupoCadastro.currentText().split()[0]
        descricao = self.lb_descricaoCadastro.text()
        unidadeEstoque = self.cb_unidadeCadastro.currentText().split()[0]
        codigoBarras = self.lb_codigoBarrasCadastro.text()
        referencia = self.lb_referenciaCadastro.text()
        aplicacao = self.lb_aplicacaoCadastro.text()
        localizacao = self.lb_localizacaoCadastro.text()
        #dataCadastro = datetime.today().strftime('%Y-%m-%d')
        baixarEstoque = self.cb_baixarEstoqueCadastro.currentText()
        #tipoMaterial = self.cb_tipoMaterialCadastro.currentText()
        #tipoEmpresa = self.cb_tipoEmpresaCadastro.currentText()
        complementoDescricao = self.lb_complementoCadastro.toPlainText()
        precoVenda = self.lb_precoVendaCadastro.text()
        precoVenda = funcoesAuxiliares.valorPTBRtoUS(precoVenda)
        precoCusto = self.lb_precoCusto.text()
        precoCusto = funcoesAuxiliares.valorPTBRtoUS(precoCusto)
        #precoCustoMedio = self.lb_precoCustoMedio.text()
        #precoCustoMedio = funcoesAuxiliares.valorPTBRtoUS(precoCustoMedio)
        situacaoTributaria = self.cb_situacaoTributariaCadastro.currentText()
        classificacaoFiscal = self.cb_classificacaoFiscalCadastro.currentText()
        ipi = self.lb_ipiCadastro.text()
        ipi = funcoesAuxiliares.valorPTBRtoUS(ipi)
        icms = self.lb_icmsCadastro.text()
        icms = funcoesAuxiliares.valorPTBRtoUS(icms)
        reducaoICMS = self.lb_reducaoIcmsCadastro.text()
        reducaoICMS = funcoesAuxiliares.valorPTBRtoUS(reducaoICMS)
        porcentContrib = self.lb_porcentagemContribuicaoCadastro.text()
        porcentContrib = funcoesAuxiliares.valorPTBRtoUS(porcentContrib)
        porcentTotalContrib = self.lb_porcentagemTotalContribuicaoCadastro.text()
        porcentTotalContrib = funcoesAuxiliares.valorPTBRtoUS(porcentTotalContrib)
        decretoNFE1 = self.lb_decretoNfe1.text()
        decretoNFE2 = self.lb_decretoNfe2.text()
        with open('C:/variaveisAuxiliares/auxiliares.txt', 'r') as f:
            usuarioCadastro = f.read()
        dataHoje = datetime.today().strftime('%Y-%m-%d %H:%M:%S')
        serialUniqPC = subprocess.check_output('wmic bios get serialnumber').decode("utf-8") 
        auditoria = str(dataHoje) + ' ' + str(serialUniqPC[36:49])
        ativo = self.cb_ativoCadastro.currentText()
        if ativo == 'Sim':
            ativo = 'S'
        else:
            ativo = 'N'
        # Confere se elas foram preenchidas ou não, se não coloca "None"
        if descricao == '':
            descricao = None
        if codigoBarras == '':
            codigoBarras = None
        if referencia == '':
            referencia = None
        if aplicacao == '':
            aplicacao = None
        if localizacao == '':
            localizacao = None
        if complementoDescricao == '':
            complementoDescricao = None
        if precoVenda == '':
            precoVenda = None
        if precoCusto == '':
            precoCusto = None
        #if precoCustoMedio == '':
        #    precoCustoMedio = None
        if ipi == '':
            ipi = None
        if icms == '':
            icms = None
        if reducaoICMS == '':
            reducaoICMS = None
        if porcentContrib == '':
            porcentContrib = None
        if porcentTotalContrib == '':
            porcentTotalContrib = None
        if decretoNFE1 == '':
            decretoNFE1 = None
        if decretoNFE2 == '':
            decretoNFE2 = None
        # Tenta realizar a conexão com o BD e executar a Query
        try:
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            sql = "INSERT INTO produtos (fk_familia, fk_grupo, fk_subGrupo, descricao, unidadeEstoque, codigoBarras, referencia, aplicacao, localizacao, baixarEstoque, complementoDescricao, precoVenda, precoCusto, situacaoTributaria, classificacaoFiscal, ipi, icms, reducaoICMS, porcentContrib, porcentTotalContrib, decretoNFE1, decretoNFE2, usuarioCadastro, auditoria, ativo) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
            val = (fk_familia, fk_grupo, fk_subGrupo, descricao, unidadeEstoque, codigoBarras, referencia, aplicacao, localizacao, baixarEstoque, complementoDescricao, precoVenda, precoCusto, situacaoTributaria, classificacaoFiscal, ipi, icms, reducaoICMS, porcentContrib, porcentTotalContrib,  decretoNFE1, decretoNFE2, usuarioCadastro, auditoria, ativo)
            mycursor.execute(sql, val)
            # Make sure data is committed to the database
            mydb.commit()
            # Limpa as labels da tela
            self.lb_descricaoCadastro.clear()
            self.lb_codigoBarrasCadastro.clear()
            self.lb_referenciaCadastro.clear()
            self.lb_aplicacaoCadastro.clear()
            self.lb_complementoCadastro.clear()
            self.lb_precoVendaCadastro.clear()
            self.lb_ipiCadastro.clear()
            self.lb_icmsCadastro.clear()
            self.lb_reducaoIcmsCadastro.clear()
            self.lb_porcentagemContribuicaoCadastro.clear()
            self.lb_porcentagemTotalContribuicaoCadastro.clear()
            self.lb_decretoNfe1.clear()
            self.lb_decretoNfe2.clear()
            # Mensagem de Inclusão de dados realizada
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Aviso")
            msg.setInformativeText('Produto incluído no sistema!')
            msg.setWindowTitle("Informação")
            msg.exec_()
        except Exception as error:
            print(sql)
            print(val)
            self.all_data = 0
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Error")
            msg.setInformativeText('Ocorreu um erro: ' + str(error))
            msg.setWindowTitle("Error")
            msg.exec_()
            pass
            # disconnecting from DB
            mycursor.close()
            mydb.close()
            # Retorna para a primeira página da tab
            self.tabWidget.setCurrentIndex(0)
            # Fecha o frame dados
            self.frameDadosProduto.hide()
    # Consulta Geral a tabela produtos do BD
    def consultaGeral(self):
        # Tenta realizar a conexão com o BD e executar a Query
        try:
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            mycursor.execute("""
                             SELECT 
                                idproduto, fp.descricao AS familia, gp.descricao AS grupo, sp.descricao AS subgrupo, p.descricao, unidadeEstoque, codigoBarras, referencia, 
                                aplicacao, localizacao, baixarEstoque, complementoDescricao, precoVenda, precoCusto, situacaoTributaria AS CST, classificacaoFiscal AS NCM, p.ipi, icms, reducaoICMS, 
                                porcentContrib, porcentTotalContrib, decretoNFE1, decretoNFE2, p.usuarioCadastro, p.auditoria, p.ativo
                            FROM
                                produtos p
                            LEFT JOIN
                                familiaproduto fp ON fp.idfamilia = p.fk_familia
                            LEFT JOIN
                                grupofamiliaproduto gp ON gp.idgrupo = p.fk_grupo
                            LEFT JOIN
                                subgrupofamiliaproduto sp ON sp.idsubGrupo = p.fk_subGrupo
                            WHERE
                                p.ativo = 'S';                             
                             """)
            myresult = mycursor.fetchall()
            df_dados = pd.DataFrame(myresult, columns = ['idproduto', 'familia', 'grupo', 'subgrupo', 'descricao', 'unidade', 'codigoBarras', 'referencia', 'aplicacao', 'localizacao', 'baixarEstoque', 'complementoDescricao', 'precoVenda', 'precoCusto', 'CST', 'NCM', 'IPI', 'ICMS', 'reducaoICMS', 'porcentContrib','porcentTotalContrib', 'decretoNFE1', 'decretoNFE2', 'usuarioCadastro', 'auditoria', 'ativo'])
            self.all_data = df_dados
            # Carrega o arquivo na tabela tb_produtos#
            numRows = len(self.all_data.index)
            self.tb_produtos.setColumnCount(len(self.all_data.columns))
            self.tb_produtos.setRowCount(numRows)
            self.tb_produtos.setHorizontalHeaderLabels(self.all_data.columns)
            for i in range(numRows):
                for j in range(len(self.all_data.columns)):
                    self.tb_produtos.setItem(i, j, QTableWidgetItem(str(self.all_data.iat[i,j])))
            self.tb_produtos.resizeColumnsToContents()
            self.tb_produtos.resizeRowsToContents()
            mycursor.close()
        except Exception as error:
            print(error)
            self.all_data = 0
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText("Error")
            msg.setInformativeText('Ocorreu um erro: ' + str(error))
            msg.setWindowTitle("Error")
            msg.exec_()
            pass
    # avança pagina Tab
    def AvancaPagTab(self):
        self.tabWidget.setCurrentIndex(1)
    # Retorna página Tab
    def retornaPagTab(self):
        self.tabWidget.setCurrentIndex(0)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    formProdutos = QtWidgets.QWidget()
    ui = Ui_formProdutos()
    ui.setupUi(formProdutos)
    formProdutos.show()
    sys.exit(app.exec_())
